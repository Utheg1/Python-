# Date.py
class Date:
    def __init__(self, day, month, year):
        if not (1 <= day <= 31 and 1 <= month <= 12):
            raise ValueError("Invalid day or month.")
        self.day = day
        self.month = month
        self.year = year

    @property
    def day(self):
        return self._day

    @day.setter
    def day(self, value):
        self._day = value

    @property
    def month(self):
        return self._month

    @month.setter
    def month(self, value):
        self._month = value

    @property
    def year(self):
        return self._year

    @year.setter
    def year(self, value):
        self._year = value

    def __eq__(self, other):
        return self.day == other.day and self.month == other.month and self.year == other.year

    def __str__(self):
        return f"{self.day}/{self.month}/{self.year}"

# main.py
def check_overlap(event_list, new_event):
    for event in event_list:
        if event.event_date == new_event.event_date:
            if not (new_event.end_hour <= event.start_hour or new_event.start_hour >= event.end_hour):
                return event
    return None

def main():
    events = []

    while True:
        print("\nChoose an option:")
        print("1. Add an Event")
        print("2. Cancel an Event")
        print("3. View all Events")
        print("4. Quit")

        choice = input("Enter your choice: ")

        if choice == "1":
            try:
                day = int(input("Enter day: "))
                month = int(input("Enter month: "))
                year = int(input("Enter year: "))
                date = Date(day, month, year)

                name = input("Enter event name: ")
                start_hour = int(input("Enter start hour (0-23): "))
                end_hour = int(input("Enter end hour (0-23): "))

                new_event = Event(date, name, start_hour, end_hour)

                overlap = check_overlap(events, new_event)
                if overlap:
                    print(f"Cannot add event. It overlaps with: {overlap}")
                else:
                    events.append(new_event)
                    print("Event added successfully!")
            except ValueError as e:
                print(f"Error: {e}")

        elif choice == "2":
            name = input("Enter the name of the event to cancel: ")
            event_to_remove = next((event for event in events if event.event_name == name), None)

            if event_to_remove:
                events.remove(event_to_remove)
                print("Event canceled successfully!")
            else:
                print("Event not found.")

        elif choice == "3":
            if not events:
                print("No events scheduled.")
            else:
                for event in events:
                    print(event)

        elif choice == "4":
            print("Goodbye!")
            break

        else:
            print("Invalid choice. Please try again.")

if __name__ == "__main__":
    main()
